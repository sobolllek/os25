; nasm -f elf32 filecopy.asm
; ld -m elf_i386 filecopy.o -o filecopy

section .data
    cSYS_EXIT      equ 0x01
    cSYS_READ      equ 0x03
    cSYS_WRITE     equ 0x04
    cSYS_OPEN      equ 0x05
    cSYS_CLOSE     equ 0x06
    cSYS_LSEEK     equ 0x13
    cSYS_CREAT     equ 0x08

    cO_WRONLY      equ 0x01
    cO_CREAT       equ 0x40
    cO_TRUNC       equ 0x200
    cWRITE_FLAGS   equ cO_WRONLY | cO_CREAT | cO_TRUNC

    SEEK_SET       equ 0x00
    SEEK_END       equ 0x02

    file_in        db 'input.txt', 0
    file_out       db 'output.txt', 0

section .bss
    buffer         resb 512
    fd_in          resd 1
    fd_out         resd 1
    file_len       resd 1

section .text
    global _start

_start:

; --- open input file ---
    mov     eax, cSYS_OPEN
    mov     ebx, file_in
    xor     ecx, ecx             ; O_RDONLY = 0
    int     0x80
    mov     [fd_in], eax

; --- seek to end ---
    mov     eax, cSYS_LSEEK
    mov     ebx, [fd_in]
    xor     ecx, ecx
    mov     edx, SEEK_END
    int     0x80
    mov     [file_len], eax

; --- seek to start ---
    mov     eax, cSYS_LSEEK
    mov     ebx, [fd_in]
    xor     ecx, ecx
    xor     edx, edx
    int     0x80

; --- read file ---
    mov     eax, cSYS_READ
    mov     ebx, [fd_in]
    mov     ecx, buffer
    mov     edx, [file_len]
    int     0x80

; --- close input ---
    mov     eax, cSYS_CLOSE
    mov     ebx, [fd_in]
    int     0x80

; --- create output file ---
    mov     eax, cSYS_CREAT
    mov     ebx, file_out
    mov     ecx, 0x1A4           ; 0644 = rw-r--r--
    int     0x80
    mov     [fd_out], eax

; --- write to output file ---
    mov     eax, cSYS_WRITE
    mov     ebx, [fd_out]
    mov     ecx, buffer
    mov     edx, [file_len]
    int     0x80

; --- close output ---
    mov     eax, cSYS_CLOSE
    mov     ebx, [fd_out]
    int     0x80

; --- exit(0) ---
    mov     eax, cSYS_EXIT
    xor     ebx, ebx
    int     0x80
