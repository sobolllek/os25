section .data
    input_filename db 'input.txt', 0    ; имя исходного файла
    output_filename db 'output.txt', 0 ; имя выходного файла
    buffer resb 512                    ; буфер для чтения данных

section .bss
    filesize resq 1                    ; переменная под размер файла

section .text
    global _start

_start:
    ; --- Открыть input.txt (O_RDONLY = 0) ---
    mov rax, 2              ; cSYS_OPEN
    lea rdi, [input_filename] ; имя файла
    xor rsi, rsi            ; O_RDONLY = 0
    syscall
    mov r12, rax            ; сохранить дескриптор файла

    ; --- Узнать размер файла: lseek(fd, 0, SEEK_END) ---
    mov rax, 8              ; cSYS_LSEEK
    mov rdi, r12            ; дескриптор файла
    xor rsi, rsi            ; смещение 0
    mov rdx, 2              ; SEEK_END
    syscall
    mov [filesize], rax     ; сохранить размер файла
    mov r13, rax            ; размер файла также в регистре

    ; --- Установить указатель в начало (SEEK_SET = 0) ---
    mov rax, 8              ; cSYS_LSEEK
    mov rdi, r12            ; дескриптор файла
    xor rsi, rsi            ; смещение 0
    xor rdx, rdx            ; SEEK_SET = 0
    syscall

    ; --- Прочитать r13 байт ---
    mov rax, 0              ; cSYS_READ
    mov rdi, r12            ; дескриптор файла
    lea rsi, [buffer]       ; адрес буфера
    mov rdx, r13            ; количество байт для чтения
    syscall
    ; RAX содержит количество реально прочитанных байт

    ; --- Закрыть input файл ---
    mov rax, 3              ; cSYS_CLOSE
    mov rdi, r12
    syscall

    ; --- Создать output.txt (O_WRONLY | O_CREAT | O_TRUNC = 577) ---
    mov rax, 2              ; cSYS_OPEN
    lea rdi, [output_filename] ; имя файла
    mov rsi, 577            ; флаги (O_WRONLY | O_CREAT | O_TRUNC)
    mov rdx, 0644           ; права доступа
    syscall
    mov r14, rax            ; сохранить дескриптор output файла

    ; --- Записать r13 байт ---
    mov rax, 1              ; cSYS_WRITE
    mov rdi, r14            ; дескриптор файла
    lea rsi, [buffer]       ; адрес буфера
    mov rdx, r13            ; количество байт для записи
    syscall

    ; --- Закрыть output файл ---
    mov rax, 3              ; cSYS_CLOSE
    mov rdi, r14
    syscall

    ; --- Завершение программы ---
    mov rax, 60             ; cSYS_EXIT
    xor rdi, rdi            ; код возврата 0
    syscall
